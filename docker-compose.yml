version: '3.8'

services:
   app:
      build:
         context: .
         dockerfile: Dockerfile
      ports:
         - "8080:8080"
      environment:
         SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/online_shop
         SPRING_DATASOURCE_USERNAME: postgres
         SPRING_DATASOURCE_PASSWORD: postgres
         SPRING_JPA_HIBERNATE_DDL_AUTO: validate
         MINIO_ENDPOINT: http://minio:9000
         MINIO_ACCESS_KEY: miniouser
         MINIO_SECRET_KEY: miniopassword
      depends_on:
         db:
            condition: service_healthy
         minio:
            condition: service_healthy
      networks:
         - btpn_network

   db:
      image: postgres
      environment:
         POSTGRES_DB: online_shop
         POSTGRES_USER: postgres
         POSTGRES_PASSWORD: postgres
      ports:
         - "5432:5432"
      volumes:
         - pgdata:/var/lib/postgresql/data
         - ./db-init-scripts:/docker-entrypoint-initdb.d/
      healthcheck:
         test: ["CMD-SHELL", "pg_isready -U postgres"]
         interval: 10s
         timeout: 5s
         retries: 5
      networks:
         - btpn_network

   minio:
      image: minio/minio
      ports:
         - "9000:9000"
         - "9001:9001"
      environment:
         MINIO_ACCESS_KEY: miniouser
         MINIO_SECRET_KEY: miniopassword
      volumes:
         - miniodata:/data
      command: server /data --console-address ":9001"
      healthcheck:
         test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
         interval: 30s
         timeout: 10s
         retries: 3
      networks:
         - btpn_network

volumes:
   pgdata:
   miniodata:

networks:
   btpn_network:
      driver: bridge
